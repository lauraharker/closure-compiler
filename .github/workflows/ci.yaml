# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Format reference: https://docs.github.com/en/actions/reference

name: Compiler CI

# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#on
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  schedule:
  # Daily at 12pm UTC
  - cron: '0 12 * * *'

permissions:
  contents: read

env:
  VERSION_NODEJS: '16.16.0'
  UNSYMLINK_DIR: bazel-bin-unsymlink

# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobs
jobs:
  tag_release_version_id:
    name: Tag Release Version ID
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    # Checkout most recent two commits
    - name: Checkout Current closure-compiler Commit
      # https://github.com/marketplace/actions/checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - id: detect_changes
      run: |
        PIPER_DIFF=$(git diff HEAD~1 -- .github/piper-cut-cl.json)
        FOUND_NEW_RELEASE=$([ -n "$PIPER_DIFF" ] && echo "true" || echo "false")
        echo "foundNewRelease=$FOUND_NEW_RELEASE" >> "$GITHUB_OUTPUT"
        echo "foundNewRelease: $FOUND_NEW_RELEASE"

    - id: set_piper_json_vars
      run: |
        {
            echo 'piperJson<<EOF'
            cat ./.github/piper-cut-cl.json
            echo EOF
        } >> "$GITHUB_OUTPUT"

    # If we need to cut a new release, check out all the historical commits/tags.
    # This is much more expensive than just checking out the most recent
    # 2 commits, so we only do it if needed.
    - name: Checkout all closure-compiler commits and tags
      uses: actions/checkout@v4
      if: ${{ steps.detect_changes.outputs.foundNewRelease == 'true' }}
      with:
        fetch-depth: 0

    - name: Tag cut CL
      id: tag_cut_cl
      if: ${{ steps.detect_changes.outputs.foundNewRelease == 'true' }}
      run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          .github/ci_support/tag_release_version.sh \
              "${{ fromJson(env.piperJson).piper_cut_cl }}" \
              "${{ fromJson(env.piperJson).version_id }}";
      env:
        piperJson: ${{ steps.set_piper_json_vars.outputs.piperJson }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
